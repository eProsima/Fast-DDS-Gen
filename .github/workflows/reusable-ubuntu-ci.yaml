name: Fast DDS Gen Ubuntu CI reusable workflow

on:
  workflow_call:
    inputs:
      os_image:
        description: 'The OS image for the workflow'
        required: true
        type: string
      java_version:
        description: 'The Java version to be used'
        required: true
        type: string
      fastddsgen_branch:
        description: 'Fast DDS Gen branch to be used'
        required: true
        type: string

defaults:
  run:
    shell: bash

jobs:
  ubuntu-build-test:
    runs-on: ${{ inputs.os_image }}
    strategy:
      fail-fast: false

    steps:
      - uses: eProsima/eProsima-CI/external/checkout@v0
        with:
          path: src/fastddsgen
          ref: ${{ inputs.fastddsgen_branch }}

      - name: Get minimum supported version of CMake
        uses: eProsima/eProsima-CI/external/get-cmake@v0
        with:
          cmakeVersion: 3.22.6

      - name: Setup CCache
        uses: eProsima/eProsima-CI/external/setup-ccache-action@v0
        with:
          api_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install apt packages
        uses: eProsima/eProsima-CI/ubuntu/install_apt_packages@v0
        with:
          packages: libasio-dev libtinyxml2-dev ${{ inputs.java_version }}

      - name: Configure Java to ${{ inputs.java_version }}
        shell: bash
        run: |
          jv=$(echo ${{ inputs.java_version }} | sed -r 's/.*-([0-9]*)-.*/\1/g'); jvs=$(update-alternatives --list java | grep "$jv" | head -1); sudo update-alternatives --set java "$jvs"
          jv=$(echo ${{ inputs.java_version }} | sed -r 's/.*-([0-9]*)-.*/\1/g'); jvs=$(update-alternatives --list javac | grep "$jv" | head -1); sudo update-alternatives --set javac "$jvs"

      - name: Install python packages
        uses: eProsima/eProsima-CI/multiplatform/install_colcon@v0

      - name: Get Foonathan Memory Vendor branch
        id: get_foonathan_memory_vendor_branch
        uses: eProsima/eProsima-CI/ubuntu/get_related_branch_from_repo@v0
        with:
          remote_repository: eProsima/foonathan_memory_vendor
          fallback_branch: master

      - name: Get Fast CDR branch
        id: get_fastcdr_branch
        uses: eProsima/eProsima-CI/ubuntu/get_related_branch_from_repo@v0
        with:
          remote_repository: eProsima/Fast-CDR
          fallback_branch: master

      - name: Get Fast DDS branch
        id: get_fastdds_branch
        uses: eProsima/eProsima-CI/ubuntu/get_related_branch_from_repo@v0
        with:
          remote_repository: eProsima/Fast-DDS
          fallback_branch: master

      - name: Get Fast DDS Python branch
        id: get_fastdds_python_branch
        uses: eProsima/eProsima-CI/ubuntu/get_related_branch_from_repo@v0
        with:
          remote_repository: eProsima/Fast-DDS-python
          fallback_branch: main

      - name: Get Discovery Server branch
        id: get_discovery_server_branch
        uses: eProsima/eProsima-CI/ubuntu/get_related_branch_from_repo@v0
        with:
          remote_repository: eProsima/Discovery-Server
          fallback_branch: master

      - uses: ./src/fastddsgen/.github/actions/fetch-fastddsgen-repos
        with:
          foonathan-memory-vendor-branch: ${{ steps.get_foonathan_memory_vendor_branch.outputs.deduced_branch }}
          fastcdr-branch: ${{ steps.get_fastcdr_branch.outputs.deduced_branch }}
          fastdds-branch: ${{ steps.get_fastdds_branch.outputs.deduced_branch }}
          fastdds-python-branch: ${{ steps.get_fastdds_python_branch.outputs.deduced_branch }}
          discovery-server-branch: ${{ steps.get_discovery_server_branch.outputs.deduced_branch }}

      - name: Build fastddsgen
        run: |
          cd src/fastddsgen
          ./gradlew assemble
          echo "$(pwd)/scripts" >> ${{ github.path }}

      - name: Regenerate IDL files for Fast DDS, Fast DDS Python, and Discovery Server
        run: |
          cd src/Fast-DDS
          ./utils/scripts/update_generated_code_from_idl.sh
          cd -

          cd src/Fast-DDS-python
          ./utils/scripts/update_generated_code_from_idl.sh
          cd -

          cd src/Discovery-Server
          ./utils/scripts/update_generated_code_from_idl.sh
          cd -

      - name: Build workspace
        run: |
          cmake --version
          colcon build --event-handlers=console_direct+ --mixin rel-with-deb-info ccache --metas src/fastddsgen/.github/fastddsgen.meta

      - name: Test fastddsgen
        run: |
          source install/local_setup.bash
          cd src/fastddsgen
          ./gradlew test
