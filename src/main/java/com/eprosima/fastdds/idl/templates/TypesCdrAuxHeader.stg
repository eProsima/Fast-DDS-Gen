// Copyright 2023 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

group TypesCdrAuxHeader;

import "eprosima.stg"

main(ctx, definitions, extensions) ::= <<
$fileHeader(ctx=ctx, file=[ctx.filename, "CdrAux.hpp"], description=["This source file contains some definitions of CDR related functions."])$

#ifndef _FAST_DDS_GENERATED_$ctx.headerGuardName$CDRAUX_HPP_
#define _FAST_DDS_GENERATED_$ctx.headerGuardName$CDRAUX_HPP_

#include "$ctx.filename$.hpp"

$if(ctx.anyCdr)$
$ctx.types:{ type | $if(type.inScope)$$if(type.typeCode.isStructType)$
constexpr uint32_t $type.typeCode.cScopedname$_max_cdr_typesize {$type.typeCode.maxSerializedSize$UL\};
constexpr uint32_t $type.typeCode.cScopedname$_max_key_cdr_typesize {$type.typeCode.maxKeySerializedSize$UL\};
$endif$$endif$
}; separator="\n"$
$endif$

namespace eprosima {
namespace fastcdr {

class Cdr;
class CdrSizeCalculator;

$definitions; separator="\n"$

} // namespace fastcdr
} // namespace eprosima

#endif // _FAST_DDS_GENERATED_$ctx.headerGuardName$CDRAUX_HPP_
$"\n"$
>>


struct_type(ctx, parent, struct, extensions, member_list) ::= <<
$member_list$
eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const $struct.scopedname$& data);

>>
