// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

group CMakeLists;

cmakelists(solution, test) ::= <<

cmake_minimum_required(VERSION 3.22)

project("generated_code")

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_EXTENSIONS OFF)

$if(test)$
if(NOT MSVC OR NOT MSVC_IDE)
    set(CMAKE_CXX_FLAGS
        "\${CMAKE_CXX_FLAGS} -Wall -pedantic -Wextra -Wno-unknown-pragmas -Wno-error=deprecated-declarations -Wno-switch-bool")
    if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
        set(CMAKE_CXX_FLAGS "\${CMAKE_CXX_FLAGS} -Wno-psabi")
        set(CMAKE_SHARED_LINKER_FLAGS "\${CMAKE_SHARED_LINKER_FLAGS} -Wl,--no-undefined")
    elseif(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
        set(CMAKE_CXX_FLAGS "\${CMAKE_CXX_FLAGS} -Wno-deprecated-builtins")
        set(CMAKE_SHARED_LINKER_FLAGS "\${CMAKE_SHARED_LINKER_FLAGS} -Wl")
    endif()
endif()
$endif$

# Find requirements
find_package(fastcdr 2 REQUIRED)
find_package(fastrtps 2.12 REQUIRED)

$solution.projects : { project | $pub_sub_execs(project=project, libraries=solution.libraries, test=test)$}; separator="\n"$

>>

pub_sub_execs(project, libraries, test) ::= <<

message(STATUS "Configuring $project.name$...")
add_library($project.name$_lib $project.commonSrcFiles : { file | $file$}; separator=" "$)
target_link_libraries($project.name$_lib $solution.libraries : { library | $library$}; separator=" "$)

$if(!project.projectSrcFiles.empty)$
add_executable($project.name$ $project.projectSrcFiles : { file | $file$}; separator=" "$)
target_link_libraries($project.name$ $solution.libraries : { library | $library$}; separator=" "$
        $project.name$_lib $project.dependencies : { dep | $dep$_lib}; separator=" "$)
$endif$

$if(test)$
# $project.name$ Serialization Test
add_executable($project.name$SerializationTest
        $project.commonTestingFiles : { file | $file$}; separator="\n"$
)
target_link_libraries($project.name$SerializationTest $solution.libraries : { library | $library$}; separator=" "$
        $project.name$_lib $project.dependencies : { dep | $dep$_lib}; separator=" "$)

$endif$

>>
