// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

group FastCdrCommon;

paramRetType(typecode) ::= <<
$if(typecode)$
$typecode.cppTypename$
$else$
void
$endif$
>>

paramTypeByValue(typecode) ::= <<
$if(typecode.primitive)$
$typecode.cppTypename$
$else$
const $typecode.cppTypename$&
$endif$
>>

paramTypeByRef(typecode) ::= <<
$typecode.cppTypename$&
>>

paramDeclarations(params, separatorInicial) ::= <<
$if(params)$$separatorInicial$$endif$$params : {param | /*$param.comment$*/ $if(param.output)$$paramTypeByRef(typecode=param.typecode)$$else$$paramTypeByValue(typecode=param.typecode)$$endif$ $param.name$}; separator=", "$
>>

paramDeclarationsByValue(params, separatorInicial) ::= <<
$if(params)$$separatorInicial$$endif$$params : {param | /*$param.comment$*/ $paramTypeByValue(typecode=param.typecode)$ $param.name$}; separator=", "$
>>

object_serialization(ctx, object) ::= <<
scdr << eprosima::fastcdr::MemberId($object.id$) << $object.name$();
>>

bitfield_serialization(ctx, object) ::= <<$if(member.name)$
scdr << static_cast<$member.spec.cppTypename$>($member.name$());$endif$
>>

object_deserialization(ctx, object) ::= <<
dcdr \>> $object.name$();
>>

bitfield_deserialization(ctx, object) ::= <<$if(member.name)$$member.spec.cppTypename$ aux_$member.name$;
dcdr \>> aux_$member.name$;
$member.name$(aux_$member.name$);$endif$
>>

serialized_size_type(ctx, typecode, var) ::= <<
>>

cdrIndexName(name, loopvar) ::= <<$name$[$loopvar$]>>

cdrMemberName(name, preffix) ::= <<$preffix$$name$>>

const_decl(ctx, parent, const) ::= <<>>

object_cpptypename(object) ::= <<
$if(object.annotationOptional)$eprosima::fastcdr::optional<$endif$$object.typecode.cppTypename$$if(object.typecode.forwarded)$*$endif$$if(object.annotationOptional)$>$endif$
>>

object_function_access(object) ::= <<$if(object.annotationOptional)$->$else$.$endif$>>

sizeFunction ::= [
        "type_e":"size()",
        "type_d":"length()",
        "type_15":"length()",
        default: // not basic type.
]
